% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/automated_homography_algorithm.R
\name{ov_detect_court}
\alias{ov_detect_court}
\title{Detect court on an image}
\usage{
ov_detect_court(
  image_file,
  video_file,
  t = 60,
  method = "LSD",
  score_distance = "colour-based",
  line_colour = "white",
  court_colour = "#c17257",
  image_width = 1280,
  image_height = 720
)
}
\arguments{
\item{image_file}{string: path to an image file (jpg) containing the court image (not required if \code{video_file} is supplied)}

\item{video_file}{string: path to a video file from which to extract the court image (not required if \code{image_file} is supplied)}

\item{t}{numeric: the time of the video frame to use as the court image (not required if \code{image_file} is supplied)}

\item{method}{string: either "LSD" or "Hough". See Details}

\item{score_distance}{string: Default to "colour-based". Calculate the likelihood of a homography based on the colour of the estimated lines locations}

\item{line_colour}{string: colour of the lines for the courts. Default to "white"}

\item{court_colour}{string: colour of the court. Default to "#c17257" (the orange-ish colour typical of synthetic-floor indoor courts)}

\item{image_width}{numeric: width of the image in pixels. Default to 1280}

\item{image_height}{numeric: height of the image in pixels. Default to 720}
}
\value{
A list of all possible homographies, with a score
}
\description{
Detect court on an image
}
\examples{
if (interactive()) {
  library(magick)
  image_file <- system.file("extdata/2019_03_01-KATS-BEDS-court.jpg", package = "ovideo")
  court_df <- ov_detect_court(image_file = image_file)


  image_file <- ov_video_frame("~/Documents/Donnees/VolleyBall/Dropbox/server_videos/AVL/Men/2022/20221022M_CH_vs_TE.m4v", t=800)
  plot(image_read(image_file))
  court_df <- ov_detect_court(image_file = image_file)
  idxBS <- which.min(do.call(c,lapply(court_df, function(x) x$score)))
  crt_ref_e <- court_df[[idxBS]]$court_ref
  estimated_lines <- crt_ref_e \%>\%
    tidyr::pivot_wider(names_from = "side", values_from = c("x", "y", "court_x", "court_y"))
  plot(image_read(image_file))
  polygon(crt_ref_e$x[c(1,2,10,9)], crt_ref_e$y[c(1,2,10,9)], density = 25, col = "blue")
  polygon(crt_ref_e$x[c(3,4,8,7)], crt_ref_e$y[c(3,4,8,7)], density = 50, col = "cyan")
  segments(x0 = estimated_lines$x_left[3], y0 = estimated_lines$y_left[3],
           x1 = estimated_lines$x_right[3], y1 = estimated_lines$y_right[3], col = "white")
}

}
\seealso{
\code{\link[=ov_transform_points]{ov_transform_points()}}, \code{\link[datavolley:dv_court]{datavolley::dv_court()}},  \code{\link[datavolley:ggcourt]{datavolley::ggcourt()}}
}
