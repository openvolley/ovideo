% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformation.R
\name{ov_3dpos_multicamera}
\alias{ov_3dpos_multicamera}
\title{3D position estimate from multiple 2D views}
\usage{
ov_3dpos_multicamera(uv, C)
}
\arguments{
\item{uv}{matrix or data.frame: u, v positions in 2D images, one row per image (u and v are the image x- and y-coordinates, normalized to the range 0-1)}

\item{C}{list: a list of the same length as the number of rows in \code{uv}. The ith entry of \code{C} is the camera matrix (as returned by \code{\link[=ov_cmat_estimate]{ov_cmat_estimate()}}) associated with the image coordinates in row i of \code{uv}. NOTE that the camera matrices in C must all return positions with the same orientation (i.e. all on the same court coordinates, oriented the same way)}
}
\value{
A named list with components \code{xyz} (the estimated 3D position) and \code{err} (the uncertainty in that position estimate - not yet populated)
}
\description{
3D position estimate from multiple 2D views
}
\examples{
uv1 <- c(0.369, 0.775) ## object position in image 1
uv2 <- c(0.732, 0.688) ## object position in image 2

## the camera matrices for the two images
 refpts1 <- dplyr::tribble(~image_x, ~image_y, ~court_x, ~court_y, ~z,
                             0.0533,   0.0326,      3.5,      6.5,  0,
                              0.974,   0.0572,      0.5,      6.5,  0,
                              0.683,    0.566,      0.5,      0.5,  0,
                              0.283,    0.560,      3.5,      0.5,  0,
                              0.214,    0.401,      3.5,      3.5,  0,
                              0.776,    0.412,      0.5,      3.5,  0,
                              0.780,    0.680,      0.5,      3.5,  2.43,
                              0.206,    0.670,      3.5,      3.5,  2.43)

 C1 <- ov_cmat_estimate(x = refpts1[, c("image_x", "image_y")],
                        X = refpts1[, c("court_x", "court_y", "z")])

 refpts2 <- dplyr::tribble(~image_x, ~image_y, ~court_x, ~court_y, ~z,
                              0.045,   0.0978,      0.5,      0.5,  0,
                              0.963,   0.0920,      3.5,      0.5,  0,
                              0.753,    0.617,      3.5,      6.5,  0,
                              0.352,    0.609,      0.5,      6.5,  0,
                              0.255,    0.450,      0.5,      3.5,  0,
                              0.817,    0.456,      3.5,      3.5,  0,
                              0.821,    0.731,      3.5,      3.5,  2.43,
                              0.246,    0.720,      0.5,      3.5,  2.43)
 C2 <- ov_cmat_estimate(x = refpts2[, c("image_x", "image_y")],
                        X = refpts2[, c("court_x", "court_y", "z")])

ov_3dpos_multicamera(rbind(uv1, uv2), list(C1, C2))

}
\seealso{
\code{\link[=ov_shiny_court_ref]{ov_shiny_court_ref()}} can also be used to generate camera matrices
}
